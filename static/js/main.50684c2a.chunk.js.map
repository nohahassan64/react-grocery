{"version":3,"sources":["Alert.js","List.js","App.js","index.js"],"names":["Alert","msg","type","removeAlert","list","useEffect","timeOut","setTimeout","clearTimeout","className","List","items","removeItem","editItem","map","item","id","title","onClick","App","useState","name","setName","localStorage","getItem","JSON","parse","setList","isEditing","setIsEditing","editID","setEditID","show","alert","setAlert","showAlert","setItem","stringify","onSubmit","e","preventDefault","newItem","Date","getTime","toString","placeholder","value","onChange","target","length","filter","specificItem","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50684c2a.chunk.js","sourcesContent":["import React , { useEffect } from 'react'\r\n\r\nconst Alert = ({msg , type , removeAlert , list}) => {\r\n    useEffect( () => {\r\n        const timeOut = setTimeout( () => {\r\n            removeAlert();\r\n        }, 3000);\r\n        return () => clearTimeout(timeOut);\r\n    }, [list]);\r\n    return (\r\n        <div>\r\n            <p className={`alert alert-${type}`}>\r\n                {msg}\r\n            </p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react'\r\nimport { FaEdit , FaTrash } from 'react-icons/fa'\r\n\r\nconst List = ({items , removeItem , editItem}) => {\r\n    return (\r\n        <div className='grocery-list'>\r\n            {items.map( item => {\r\n                const { id , title } = item;\r\n                return(\r\n                    <div key={id} className='grocery-item'>\r\n                        <p className='title'>{title}</p>\r\n                        <div className='btn-container'>\r\n                            <button type='button' className='edit-btn' onClick={ () => editItem(id)}>\r\n                                <FaEdit />\r\n                            </button>\r\n                            <button type='button' className='delete-btn' onClick={ () => removeItem(id)}>\r\n                                <FaTrash />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List\r\n","import React , { useState , useEffect } from 'react'\nimport Alert from './Alert';\nimport './App.css'\nimport List from './List';\n\nconst getLocalStorge = () => {\n    let list = localStorage.getItem('list');\n    if(list) {\n        return JSON.parse(localStorage.getItem('list'));\n    } else {\n        return [];\n    }\n}\nconst App = () => {\n    const[name , setName ] = useState('');\n    const[list , setList ] = useState(getLocalStorge());\n    const[isEditing , setIsEditing ] = useState(false);\n    const[editID , setEditID ] = useState(null);\n    const[alert , setAlert ] = useState({\n            show: false,\n            msg: '', \n            type: ''\n        });\n\n    const handelSubmit = e => {\n        e.preventDefault();\n        if(!name) {\n            // isplay Alert\n            showAlert(true , 'من فضلك ادخل العنصر' , 'danger');\n        } else if (name && isEditing) {\n            // Deal With Edit\n            setList(list.map(item => {\n                if(item.id === editID) {\n                    return {...item , title: name};\n                }\n                    return item;\n            }));\n            setName('');\n            setEditID(null);\n            setIsEditing(false);\n            showAlert( true , 'تم تغيير العنصر' , 'success');\n        } else {\n            // Show Alert\n            showAlert(true , 'تم اضافة عنصر للقائمة' , 'success');\n            const newItem = { id: new Date().getTime().toString() , title: name};\n            setList([...list , newItem]);\n            setName('');\n        }\n    }\n    const showAlert = (show=false , msg='' , type='' ) => {\n        setAlert({show , msg , type });\n    }\n    const clearList = () => {\n        showAlert(true , 'القائمة فارغة' , 'danger');\n        setList([]);\n    }\n    const removeItem = (id) => {\n        showAlert(true , 'تم حذف العنصر' , 'danger');\n        setList(list.filter( item => item.id !== id));\n    }\n    const editItem = (id) => {\n        const specificItem = list.find( item => item.id === id);\n        setIsEditing(true);\n        setEditID(id);\n        setName(specificItem.title);\n    }\n    useEffect( () => {\n        localStorage.setItem('list' , JSON.stringify(list));\n    } , [list]);\n    return (\n        <section className='section-center'>\n            <form className='grocery-form' onSubmit={handelSubmit}>\n                {alert.show && <Alert {...alert} removeAlert={showAlert} list={list}/>}\n                <h3>مشتريات البقالة</h3>\n                <div className='form-control'>\n                    <input \n                        type='text'\n                        placeholder='مثلا فول'\n                        value={name}\n                        className='grocery'\n                        onChange={ (e) => setName(e.target.value)}\n                    />\n                    <button className='submit-btn' type='submit'>\n                        {isEditing ? 'تعديل' : 'اضافة'}\n                    </button>\n\n                </div>\n\n            </form>\n            {list.length > 0 && \n                <div className='grocery-container'>\n                    <List items={list} removeItem={removeItem} editItem={editItem} />\n                    <button className='clear-btn' onClick={clearList}>حذف جميع العناصر</button>\n                </div>\n            }\n            \n        </section>\n    )\n}\n\nexport default App\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}